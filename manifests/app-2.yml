apiVersion: v1
items:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: app-2
        app.kubernetes.io/part-of: loadbalancing-test
      name: app-2
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: app-2
        app.kubernetes.io/part-of: loadbalancing-test
      name: app-2
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: app-2:latest
      source:
        contextDir: /
        git:
          uri: https://github.com/JurajBrabec/loadbalancing-test.git
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile-app-2
        type: Docker
      triggers:
        - type: ConfigChange
        - type: ImageChange
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"app-2:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"app-2\")].image"}]'
      labels:
        app: app-2
        app.kubernetes.io/part-of: loadbalancing-test
      name: app-2
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: app-2
          app.kubernetes.io/part-of: loadbalancing-test
          deployment: app-2
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: 'true'
          labels:
            app: app-2
            app.kubernetes.io/part-of: loadbalancing-test
            deployment: app-2
            version: dev
        spec:
          containers:
            - image: 'image-registry.openshift-image-registry.svc:5000/loadbalancing-test/app-1'
              name: app-2
              ports:
                - containerPort: 8080
                  protocol: TCP
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: app-2
        app.kubernetes.io/part-of: loadbalancing-test
      name: app-2
    spec:
      ports:
        - name: tcp-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: app-2
        app.kubernetes.io/part-of: loadbalancing-test
        deployment: app-2
kind: List
