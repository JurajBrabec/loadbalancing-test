---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: '[{APP1},{APP2}]'
    app.openshift.io/vcs-uri: 'https://github.com/excalibur-enterprise/excalibur-v4-api'
  labels:
    app: {APP_NAME}
    app.kubernetes.io/part-of: excalibur-v4-dev
  name: {APP_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {APP_NAME}
      app.kubernetes.io/part-of: excalibur-v4-dev
      deployment: {APP_NAME}
  template:
    metadata:
      labels:
        app: {APP_NAME}
        app.kubernetes.io/part-of: excalibur-v4-dev
        deployment: {APP_NAME}
    spec:
      containers:
        - command:
            ['sh', '-c', 'cd /opt/excalibur/{APP_FOLDER}; npm run dev']
          env:
            - name: DEV_MODE
              value: 'true'
          image: registry.access.redhat.com/ubi8/nodejs-20
          name: {APP_NAME}
          ports:
            - containerPort: 5858
              protocol: TCP
            - containerPort: {APP_PORT}
              protocol: TCP
          resources:
            requests:
              cpu: {APP_CPU_MIN}
              memory: {APP_MEMORY_MIN}
            limits:
              cpu: {APP_CPU_MAX}
              memory: {APP_MEMORY_MAX}
          volumeMounts:
            - name: code-base
              mountPath: /opt/excalibur/{APP_FOLDER}
              subPath: excalibur-v4/services/{APP_FOLDER}
      volumes:
        - name: code-base
          persistentVolumeClaim:
            claimName: code-base
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {APP_NAME}
    app.kubernetes.io/part-of: excalibur-v4-dev
  name: {APP_NAME}
spec:
  ports:
    - name: node-inspector
      protocol: TCP
      port: 5858
      targetPort: 5858
    - name: tcp-{APP_PORT}
      protocol: TCP
      port: {APP_PORT}
      targetPort: {APP_PORT}
  selector:
    app: {APP_NAME}
    app.kubernetes.io/part-of: excalibur-v4-dev
    deployment: {APP_NAME}
